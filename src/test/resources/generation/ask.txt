1	Ask	ask	VB	p2=VBP|pb=ask.01	0	root	_
2	the	the	DT	_	3	det	_
3	user	user	NN	_	1	dobj	1:A2
4	when	when	WRB	_	5	advmod	5:R-A2
5	was	be	VBD	pb=be.01	1	ccomp	1:A1
6	the	the	DT	_	8	det	_
7	last	last	JJ	_	8	amod	_
8	time	time	NN	_	5	nsubj	5:A1;12:AM-TMP
9	that	that	IN	p2=WDT	12	complm	_
10	the	the	DT	_	11	det	_
11	user	user	NN	_	12	nsubj	12:A1;15:A0
12	was	be	VBD	pb=be.01	8	rcmod	_
13	able	able	JJ	_	12	acomp	12:A2
14	to	to	TO	_	15	aux	_
15	log	log	VB	pb=log.01	13	xcomp	_
16	into	into	IN	_	15	prep	15:A1
17	Remedy	remedy	NNP	p2=JJ	16	pobj	_

1	Ask	ask	VB	p2=VBP|pb=ask.01	0	root	_
2	the	the	DT	_	3	det	_
3	user	user	NN	_	1	dobj	1:A2
4	how	how	WRB	_	5	advmod	_
5	many	many	JJ	_	6	amod	_
6	users	user	NNS	_	8	nsubj	8:A0
7	are	be	VBP	_	8	aux	_
8	getting	get	VBG	pb=get.01	1	ccomp	1:A1
9	this	this	DT	_	11	det	_
10	error	error	NN	_	11	nn	_
11	message	message	NN	_	8	dobj	8:A1

1	Ask	ask	VB	pb=ask.01	0	root	_
2	whether	whether	IN	_	5	complm	_
3	the	the	DT	_	4	det	_
4	user	user	NN	_	5	nsubj	5:A0-PAG;7:A0-PAG
5	needs	need	VBZ	pb=need.01	1	ccomp	1:A1-PPT
6	to	to	TO	_	7	aux	_
7	learn	learn	VB	pb=learn.01	5	xcomp	5:A1-PPT
8	how	how	WRB	_	10	advmod	10:R-AM-MNR
9	to	to	TO	_	10	aux	_
10	read	read	VB	pb=read.01	7	xcomp	7:A1-PPT
11	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	whether	whether	IN	_	5	complm	_
3	the	the	DT	_	4	det	_
4	user	user	NN	_	5	nsubj	5:A0;7:A0
5	wants	want	VBZ	pb=want.01	1	ccomp	1:A1
6	to	to	TO	_	7	aux	_
7	reset	reset	VB	pb=reset.01	5	xcomp	5:A1
8	the	the	DT	_	9	det	_
9	user	user	NN	_	11	poss	_
10	's	's	POS	_	9	possessive	_
11	password	password	NN	p2=NNP	7	dobj	7:A1
12	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	whether	whether	IN	_	4	complm	_
3	you	you	PRP	_	4	nsubj	4:A0;6:A0
4	want	want	VBP	pb=want.01	1	ccomp	1:A1
5	to	to	TO	_	6	aux	_
6	reset	reset	VB	pb=reset.01	4	xcomp	4:A1
7	your	your	PRP$	_	8	poss	_
8	password	password	NN	_	6	dobj	6:A1
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	whether	whether	IN	_	4	complm	_
3	he	he	PRP	_	4	nsubj	4:A0;6:A0
4	wants	want	VBZ	pb=want.01	1	ccomp	1:A1
5	to	to	TO	_	6	aux	_
6	reset	reset	VB	pb=reset.01	4	xcomp	4:A1
7	his	his	PRP$	_	8	poss	_
8	password	password	NN	_	6	dobj	6:A1
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	whether	whether	IN	_	4	complm	_
3	I	I	PRP	_	4	nsubj	4:A0;6:A0
4	want	want	VBP	pb=want.01	1	ccomp	1:A1
5	to	to	TO	_	6	aux	_
6	reset	reset	VB	pb=reset.01	4	xcomp	4:A1
7	my	my	PRP$	_	8	poss	_
8	password	password	NN	_	6	dobj	6:A1
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	p2=VBP|pb=ask.01	0	root	_
2	whether	whether	IN	_	5	complm	_
3	I	I	PRP	_	5	nsubj	5:A0
4	should	should	MD	_	5	aux	5:AM-MOD
5	place	place	VB	pb=place.01	1	ccomp	1:A1
6	an	an	DT	_	7	det	_
7	order	order	NN	_	5	dobj	5:A1
8	for	for	IN	_	7	prep	5:A2
9	the	the	DT	_	10	det	_
10	user	user	NN	_	8	pobj	_
11	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	whether	whether	IN	p2=CC	4	complm	_
3	you	you	PRP	_	4	nsubj	4:A0
4	want	want	VBP	p2=VB|pb=want.01	1	ccomp	1:A1
5	me	me	PRP	_	7	nsubj	7:A0
6	to	to	TO	_	7	aux	_
7	place	place	VB	pb=place.01	4	ccomp	4:A1
8	an	an	DT	_	9	det	_
9	order	order	NN	_	7	dobj	7:A1
10	for	for	IN	_	9	prep	_
11	you	you	PRP	_	10	pobj	_
12	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	whether	whether	IN	p2=CC	4	complm	_
3	you	you	PRP	_	4	nsubj	4:A0
4	wanted	want	VBD	p2=VB|pb=want.01	1	ccomp	1:A1
5	me	me	PRP	_	7	nsubj	7:A0
6	to	to	TO	_	7	aux	_
7	place	place	VB	pb=place.01	4	ccomp	4:A1
8	an	an	DT	_	9	det	_
9	order	order	NN	_	7	dobj	7:A1
10	for	for	IN	_	9	prep	_
11	you	you	PRP	_	10	pobj	_
12	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	if	if	IN	_	8	mark	_
3	the	the	DT	_	4	det	_
4	user	user	NN	_	6	poss	_
5	's	's	POS	_	4	possessive	_
6	account	account	NN	_	8	nsubjpass	8:A1
7	is	be	VBZ	_	8	auxpass	_
8	locked	lock	VBN	p2=JJ|pb=lock.01	1	ccomp	1:A1
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	if	if	IN	_	9	mark	_
3	the	the	DT	_	4	det	_
4	user	user	NN	_	6	poss	_
5	's	's	POS	_	4	possessive	_
6	account	account	NN	_	9	nsubjpass	9:A1
7	is	be	VBZ	_	9	aux	_
8	being	be	VBG	_	9	auxpass	_
9	locked	lock	VBN	pb=lock.01	1	ccomp	1:A1
10	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	if	if	IN	_	8	mark	_
3	the	the	DT	_	4	det	_
4	user	user	NN	_	6	poss	_
5	's	's	POS	_	4	possessive	_
6	account	account	NN	_	8	nsubjpass	8:A1
7	was	be	VBD	_	8	auxpass	_
8	locked	lock	VBN	p2=JJ|pb=lock.01	1	ccomp	1:A1
9	yesterday	yesterday	NN	_	8	npadvmod	8:AM-TMP
10	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	if	if	IN	_	6	mark	_
3	the	the	DT	_	4	det	_
4	user	user	NN	_	6	nsubj	6:A0
5	was	be	VBD	_	6	aux	_
6	playing	play	VBG	pb=play.01	1	ccomp	_
7	basketball	basketball	NN	_	6	dobj	6:A1
8	?	?	.	_	6	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	if	if	IN	_	5	complm	_
3	the	the	DT	_	4	det	_
4	user	user	NN	_	5	nsubj	5:A1
5	is	be	VBZ	pb=be.01	1	ccomp	1:A1
6	an	an	DT	_	8	det	_
7	existing	exist	VBG	pb=exist.01	8	amod	_
8	customer	customer	NN	_	5	attr	5:A2;7:A1
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	if	if	IN	_	6	mark	_
3	the	the	DT	_	4	det	_
4	user	user	NN	_	6	nsubj	6:A0
5	has	have	VBZ	_	6	aux	_
6	registered	register	VBN	pb=register.02	1	ccomp	1:A1
7	the	the	DT	_	8	det	_
8	user	user	NN	_	10	poss	_
9	's	's	POS	_	8	possessive	_
10	account	account	NN	_	6	dobj	6:A1
11	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	where	where	WRB	_	5	advmod	5:R-A2
3	the	the	DT	_	4	det	_
4	user	user	NN	_	5	nsubj	5:A1
5	was	be	VBD	pb=be.01	1	ccomp	1:A1
6	yesterday	yesterday	NN	_	5	npadvmod	5:AM-TMP
7	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	what	what	WP	_	5	dobj	5:R-A1
3	the	the	DT	_	4	det	_
4	user	user	NN	_	5	nsubj	5:A0
5	does	do	VBZ	pb=do.02	1	ccomp	1:A1
6	for	for	IN	_	5	prep	5:A2
7	a	a	DT	_	8	det	_
8	living	living	NN	_	6	pobj	_
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	what	what	WP	_	7	dobj	7:R-A1
3	the	the	DT	_	4	det	_
4	user	user	NN	_	5	nsubj	5:A0;7:A0
5	wants	want	VBZ	pb=want.01	1	ccomp	1:A1
6	to	to	TO	_	7	aux	_
7	buy	buy	VB	pb=buy.01	5	xcomp	5:A1
8	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	how	how	WRB	_	3	advmod	_
3	long	long	RB	p2=JJ	8	advmod	8:R-AM-TMP
4	the	the	DT	_	5	det	_
5	user	user	NN	_	8	nsubj	8:A1
6	has	have	VBZ	_	8	aux	_
7	been	be	VBN	_	8	aux	_
8	waiting	wait	VBG	pb=wait.01	1	ccomp	1:A1
9	for	for	IN	_	8	prep	8:A2
10	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	how	how	WRB	_	3	advmod	_
3	soon	soon	RB	_	6	advmod	6:R-AM-TMP
4	the	the	DT	_	5	det	_
5	user	user	NN	_	6	nsubj	6:A0
6	wants	want	VBZ	pb=want.01	1	ccomp	1:A1
7	the	the	DT	_	8	det	_
8	product	product	NN	_	11	nsubjpass	11:A1
9	to	to	TO	_	11	aux	_
10	be	be	VB	_	11	auxpass	_
11	shipped	ship	VBN	pb=ship.01	6	ccomp	6:A1
12	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	what	what	WP	p2=WDT	3	det	_
3	kind	kind	NN	_	8	dobj	8:R-A1;10:R-A1
4	of	of	IN	_	3	prep	_
5	books	book	NNS	_	4	pobj	_
6	the	the	DT	_	7	det	_
7	user	user	NN	_	8	nsubj	8:A0;10:A0
8	likes	like	VBZ	pb=like.01	1	ccomp	1:A1
9	to	to	TO	_	10	aux	_
10	buy	buy	VB	pb=buy.01	8	xcomp	8:A1
11	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	when	when	WRB	_	8	advmod	8:R-AM-TMP
3	the	the	DT	_	4	det	_
4	user	user	NN	_	6	poss	_
5	's	's	POS	_	4	possessive	_
6	account	account	NN	_	8	nsubjpass	7:A1;8:A1
7	got	get	VBD	pb=get.03	8	auxpass	_
8	locked	lock	VBN	pb=lock.01	1	ccomp	1:A1;7:A2
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	what	what	WP	_	5	dobj	5:R-A1
3	I	I	PRP	_	5	nsubj	5:A0
4	can	can	MD	_	5	aux	5:AM-MOD
5	do	do	VB	pb=do.02	1	ccomp	1:A1
6	for	for	IN	_	5	prep	5:A2
7	the	the	DT	_	8	det	_
8	user	user	NN	_	6	pobj	_
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	what	what	WP	_	5	dobj	5:R-A1
3	you	you	PRP	_	5	nsubj	5:A0
4	can	can	MD	_	5	aux	5:AM-MOD
5	do	do	VB	pb=do.02	1	ccomp	1:A1
6	for	for	IN	_	5	prep	5:A2
7	the	the	DT	_	8	det	_
8	user	user	NN	_	6	pobj	_
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	who	who	WP	_	3	nsubj	3:R-A0
3	helped	help	VBD	pb=help.01	1	ccomp	1:A1
4	the	the	DT	_	5	det	_
5	user	user	NN	_	3	dobj	3:A1
6	last	last	JJ	_	7	amod	_
7	time	time	NN	_	3	npadvmod	3:AM-TMP
8	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	which	which	WDT	_	9	nsubjpass	9:R-A1
3	of	of	IN	_	2	prep	_
4	the	the	DT	_	5	det	_
5	user	user	NN	_	7	poss	_
6	's	's	POS	_	5	possessive	_
7	accounts	account	NNS	p2=NN	3	pobj	_
8	is	be	VBZ	_	9	auxpass	_
9	locked	lock	VBN	p2=JJ|pb=lock.01	1	ccomp	1:A1
10	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.02	0	root	_
2	what	what	WP	_	3	attr	3:R-A2
3	is	be	VBZ	pb=be.01	1	ccomp	_
4	your	your	PRP$	_	5	poss	_
5	username	username	NN	_	3	nsubj	3:A1
6	?	?	.	_	3	punct	_

1	Ask	ask	VB	p2=VBP|pb=ask.01	0	root	_
2	the	the	DT	_	3	det	_
3	user	user	NN	_	1	dobj	1:A2=GOL
4	what	what	WP	_	5	attr	5:R-A2
5	is	be	VBZ	ACTION=be|pb=be.01	3	ccomp	_
6	the	the	DT	_	7	det	_
7	user	user	NN	_	9	poss	_
8	's	's	POS	_	7	possessive	_
9	username	username	NN	coref=username	5	nsubj	5:A1=PPT
10	.	.	.	_	1	punct	_

1	On	on	IN	_	9	prep	_
2	a	a	DT	_	3	det	_
3	scale	scale	NN	_	1	pobj	_
4	of	of	IN	_	3	prep	_
5	0	0	CD	_	4	pobj	_
6	to	to	TO	p2=IN	9	prep	_
7	10	0	CD	_	6	pobj	_
8	,	,	,	_	9	punct	_
9	Ask	ask	VB	p2=NNP|pb=ask.01	0	root	_
10	how	how	WRB	_	11	advmod	_
11	much	much	JJ	p2=RB	14	advmod	14:R-AM-EXT
12	the	the	DT	_	13	det	_
13	user	user	NN	_	14	nsubj	14:A0
14	likes	like	VBZ	pb=like.01	9	ccomp	9:A1=PPT
15	Doritos	doritos	NNP	p2=NNS	14	dobj	14:A1

1	Ask	ask	VB	pb=ask.01	0	root	_
2	what	what	WP	_	8	attr	8:R-A2
3	the	the	DT	_	4	det	_
4	user	user	NN	_	7	poss	_
5	's	's	POS	_	4	possessive	_
6	company	company	NN	_	7	nn	_
7	code	code	NN	_	8	nsubj	8:A1=PPT
8	is	be	VBZ	pb=be.01	1	ccomp	1:A1=PPT
9	.	.	.	_	1	punct	_

1	Ask	ask	VB	pb=ask.01	0	root	_
2	the	the	DT	_	3	det	_
3	user	user	NN	_	1	dobj	1:A2=GOL
4	what	what	WP	_	10	attr	10:R-A2
5	the	the	DT	_	6	det	_
6	user	user	NN	_	9	poss	_
7	's	's	POS	_	6	possessive	_
8	collateral	collateral	NN	p2=JJ	9	nn	_
9	type	type	NN	_	10	nsubj	10:A1=PPT
10	is	be	VBZ	pb=be.01	1	ccomp	1:A1=PPT
11	.	.	.	_	1	punct	_
